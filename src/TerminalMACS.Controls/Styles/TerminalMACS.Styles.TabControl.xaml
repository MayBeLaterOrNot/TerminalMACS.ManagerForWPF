<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:helpers="clr-namespace:TerminalMACS.Controls.Helpers"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style x:Key="MainTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource PrimaryHueMidBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid
                        x:Name="Root"
                        Width="68"
                        Height="56"
                        Cursor="Hand"
                        SnapsToDevicePixels="true">
                        <Border x:Name="mouseOverBorder" Opacity="0">
                            <Border.Background>
                                <TemplateBinding Property="Foreground">
                                    <TemplateBinding.Converter>
                                        <converters:BrushRoundConverter HighValue="White"
                                                                        LowValue="{StaticResource PrimaryHueMidBrush}" />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Border.Background>
                        </Border>
                        <Border
                            x:Name="selectedBorder"
                            Opacity="0"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.Background>
                                <TemplateBinding Property="Foreground">
                                    <TemplateBinding.Converter>
                                        <converters:BrushRoundConverter HighValue="White"
                                                                        LowValue="{StaticResource PrimaryHueMidBrush}" />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Border.Background>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <materialDesign:Ripple
                            x:Name="Ripple"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <materialDesign:Ripple.Feedback>
                                <TemplateBinding Property="Foreground">
                                    <TemplateBinding.Converter>
                                        <converters:BrushRoundConverter HighValue="Black" LowValue="White" />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </materialDesign:Ripple.Feedback>
                        </materialDesign:Ripple>

                        <Rectangle
                            x:Name="selectedRectangle"
                            Width="4"
                            HorizontalAlignment="Left"
                            Fill="#9FA4FE"
                            Opacity="0" />
                        <Rectangle
                            x:Name="mouseOverRectangle"
                            Width="4"
                            HorizontalAlignment="Left"
                            Fill="#9FA4FE"
                            Opacity="0" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.6"
                                        Storyboard="{x:Null}"
                                        From="{x:Null}"
                                        To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="mouseOverBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.4"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="mouseOverRectangle"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.2"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.4"
                                        GeneratedEasingFunction="{x:Null}"
                                        Storyboard="{x:Null}"
                                        From="{x:Null}"
                                        To="{x:Null}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="selectedBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.8"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="selectedRectangle"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger SourceName="contentPresenter" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="112" />
                        </Grid.RowDefinitions>
                        <ScrollViewer
                            Grid.Row="0"
                            Grid.Column="0"
                            VerticalScrollBarVisibility="Auto">
                            <TabPanel
                                Panel.ZIndex="1"
                                Background="Transparent"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                        </ScrollViewer>
                        <Border
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="0"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root" SnapsToDevicePixels="true">
                        <!--<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False"
                                          Margin="8" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                        <TextBlock
                            x:Name="contentPresenter"
                            Margin="8"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Header}" />
                        <Rectangle
                            x:Name="selectedUnderline"
                            Height="4"
                            Margin="8 0"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding Foreground}"
                            Focusable="False"
                            Opacity="0" />
                        <Rectangle
                            x:Name="mouseOverUnderline"
                            Height="4"
                            Margin="8 0"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding Foreground}"
                            Focusable="False"
                            Opacity="0" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.6"
                                        Storyboard="{x:Null}"
                                        From="{x:Null}"
                                        To="{x:Null}">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="selectedUnderline"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.6"
                                        GeneratedEasingFunction="{x:Null}"
                                        Storyboard="{x:Null}"
                                        From="{x:Null}"
                                        To="{x:Null}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="mouseOverUnderline"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.4" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="contentPresenter" Property="TextBlock.FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="RightToLeftMovedStoryboard">
        <DoubleAnimation
            BeginTime="00:00:00"
            Storyboard.TargetProperty="RenderTransform.X"
            From="-200"
            To="0"
            Duration="00:00:00.600">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            BeginTime="00:00:00"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="00:00:00.600">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="LeftToRightMovedStoryboard">
        <DoubleAnimation
            BeginTime="00:00:00"
            Storyboard.TargetProperty="RenderTransform.X"
            From="200"
            To="0"
            Duration="00:00:00.600">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            BeginTime="00:00:00"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="00:00:00.600">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="helpers:TabControlHelper.LeftToRightAnimation"
                Value="{StaticResource LeftToRightMovedStoryboard}" />
        <Setter Property="helpers:TabControlHelper.RightToLeftAnimation"
                Value="{StaticResource RightToLeftMovedStoryboard}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TabPanel
                            Panel.ZIndex="1"
                            Background="Transparent"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            Grid.Row="1"
                            BorderThickness="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="0"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <EventTrigger x:Key="LeftToRightMovedEventTrigger" RoutedEvent="helpers:TabControlHelper.LeftToRightMoved">
        <BeginStoryboard
            Storyboard="{Binding Path=(helpers:TabControlHelper.LeftToRightAnimation), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabControl, AncestorLevel=1}}" />
    </EventTrigger>

    <EventTrigger x:Key="RightToLeftMovedEventTrigger" RoutedEvent="helpers:TabControlHelper.RightToLeftMoved">
        <BeginStoryboard
            Storyboard="{Binding Path=(helpers:TabControlHelper.RightToLeftAnimation), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabControl, AncestorLevel=1}}" />
    </EventTrigger>

</ResourceDictionary>