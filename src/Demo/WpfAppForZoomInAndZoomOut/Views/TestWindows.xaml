<Window
    x:Class="WpfAppForZoomInAndZoomOut.Views.TestWindows"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfAppForZoomInAndZoomOut.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:WpfAppForZoomInAndZoomOut.ViewModels"
    x:Name="RootWindow"
    Title="TestWindows"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance vm:TestWindowsViewModel}"
    mc:Ignorable="d">
    <Window.Resources>

        <Style x:Key="Styles.TextBlock.TabHeader" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext}" />
            <Setter Property="Text" Value="{Binding}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.ShowMessageCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"
                            Header="删除"
                            Tag="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag}" />
                        <MenuItem Header="编辑" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Styles.ListBox.Address" TargetType="{x:Type ListBox}">

            <Setter Property="ItemsSource" Value="{Binding Address}" />
            <Setter Property="SelectedItem" Value="{Binding SelectedAddress}" />
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type system:String}">
                        <Border
                            x:Name="Border"
                            Margin="2"
                            Padding="5"
                            BorderBrush="#ccc"
                            BorderThickness="1"
                            CornerRadius="3">
                            <TextBlock Style="{StaticResource Styles.TextBlock.TabHeader}" />
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#ccc" />
                            </DataTrigger>

                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ContentTemplates.Address" DataType="{x:Type vm:AddressViewModel}">
            <Border
                x:Name="BorderBackground"
                Margin="3"
                Padding="10"
                BorderBrush="#ccc"
                BorderThickness="1"
                CornerRadius="3">
                <StackPanel>
                    <TextBlock
                        Margin="3"
                        Padding="5"
                        Text="{Binding Name}" />
                    <Button
                        x:Name="BtnShow"
                        Command="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext.ShowMessageCommand}"
                        Content="按钮"
                        Tag="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=DataContext}"
                        Visibility="Collapsed">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.ShowMessageCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"
                                    Header="删除" />
                                <MenuItem Header="编辑" />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <Trigger SourceName="BorderBackground" Property="IsMouseOver" Value="True">
                    <Setter TargetName="BtnShow" Property="Visibility" Value="Visible" />
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <StackPanel>
        <Button
            Content="TEST"
            MouseLeftButtonUp="UIElement_OnMouseLeftButtonUp"
            PreviewMouseLeftButtonDown="UIElement_OnPreviewMouseLeftButtonDown"
            PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp" />
        <Button Click="ChangeTime_Click" Content="修改标题" />
        <Button Command="{Binding ShowMessageCommand}" Content="测试" />
        <local:TextBoxEx />
        <ListBox Style="{StaticResource Styles.ListBox.Address}" />
        <ContentControl Content="{Binding SelectedAddressViewModel}" ContentTemplate="{StaticResource ContentTemplates.Address}" />
    </StackPanel>
</Window>